{"version":3,"sources":["logo.svg","MovieCard.js","SearchMovies.js","App.js","reportWebVitals.js","index.js"],"names":["MovieCard","movie","className","src","poster_path","alt","title","release_date","vote_average","overview","SearchMovies","useState","query","setQuery","movies","setMovies","searchMovies","e","a","preventDefault","url","fetch","res","json","data","results","console","log","error","onSubmit","htmlFor","type","name","placeholder","value","onChange","target","filter","map","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAAe,I,0CCCA,SAASA,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAGhC,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,cACXC,IAAG,8DAAyDF,EAAMG,aAIlEC,IAAKJ,EAAMK,MAAQ,WAEvB,sBAAKJ,UAAU,gBAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BD,EAAMK,QACnC,4BAAG,mDAAsBL,EAAMM,kBAC/B,4BAAG,6CAAgBN,EAAMO,kBACzB,mBAAGN,UAAU,aAAb,SAA2BD,EAAMQ,iBCdlC,SAASC,IAGpB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAGMC,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACjBD,EAAEE,iBAEIC,EAHW,kHAGsGR,EAHtG,iDAMKS,MAAMD,GANX,cAMPE,EANO,gBAOMA,EAAIC,OAPV,OAOPC,EAPO,OAQbT,EAAUS,EAAKC,SACfC,QAAQC,IAAIH,EAAKC,SATJ,kDAWbC,QAAQE,MAAR,MAXa,0DAAH,sDAiBlB,OACI,qCACI,uBAAM1B,UAAU,OAAO2B,SAAUb,EAAjC,UACI,uBAAOd,UAAU,QAAQ4B,QAAQ,QAAjC,wBACA,uBAAO5B,UAAU,QAAQ6B,KAAK,OAAOC,KAAK,QACtCC,YAAY,qBACZC,MAAOtB,EACPuB,SAAU,SAAClB,GAAD,OAAOJ,EAASI,EAAEmB,OAAOF,UACvC,wBAAQhC,UAAU,SAAS6B,KAAK,SAAhC,uBAGJ,qBAAK7B,UAAU,YAAf,SACKY,EAAOuB,QAAO,SAAApC,GAAK,OAAIA,EAAMG,eAAakC,KAAI,SAAArC,GAAK,OAChD,cAACD,EAAD,CAA0BC,MAAOA,GAAjBA,EAAMsC,YC5B3BC,MATf,WACE,OACE,sBAAKtC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,gCACA,cAACQ,EAAD,QCIS+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7a2543b3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\"\nexport default function MovieCard({ movie }) {\n    //const movie = props.movie \n    //const {movie} = props\n    return (\n        <div className=\"card\">\n            <img className=\"card--image\"\n                src={`https://www.themoviedb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\n\n                //  `https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}\n\n                alt={movie.title + 'poster'} />\n\n            <div className=\"card--content\">\n                <h3 className=\"card--title\">{movie.title}</h3>\n                <p><small>Release data: {movie.release_date}</small></p>\n                <p><small>Rating: {movie.vote_average}</small></p>\n                <p className=\"card--desc\">{movie.overview}</p>\n            </div>\n\n        </div>\n    )\n}","import React, { useState } from \"react\"\nimport MovieCard from './MovieCard'\n\nexport default function SearchMovies() {\n\n    //states - input query, movies\n    const [query, setQuery] = useState('')\n    //create the state for movies, and update that state approriate\n    const [movies, setMovies] = useState([])\n\n\n    const searchMovies = async (e) => {\n        e.preventDefault()\n\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=b815a7882493f20c07e4bd2e5d0604d4&language=en-US&query=${query}&page=1&include_adult=false`\n\n        try {\n            const res = await fetch(url)\n            const data = await res.json()\n            setMovies(data.results) // just like this??\n            console.log(data.results)\n        } catch (err) {\n            console.error(err)\n        }\n\n\n    }\n\n    return (\n        <>\n            <form className=\"form\" onSubmit={searchMovies}>\n                <label className=\"label\" htmlFor=\"query\">Movie Name</label>\n                <input className=\"input\" type=\"text\" name=\"query\"\n                    placeholder=\"i.e. Jurrasic Park\"\n                    value={query}\n                    onChange={(e) => setQuery(e.target.value)} />\n                <button className=\"button\" type=\"submit\">Search</button>\n            </form>\n\n            <div className=\"card-list\">\n                {movies.filter(movie => movie.poster_path).map(movie => (\n                    <MovieCard key={movie.id} movie={movie} />\n                ))}\n\n            </div>\n        </>\n    )\n}\n\n","import logo from './logo.svg';\nimport './App.css';\nimport SearchMovies from './SearchMovies';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">React Movie Finder</h1>\n      <SearchMovies />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}